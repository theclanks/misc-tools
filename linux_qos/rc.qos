#!/bin/bash

fw_start ()
{
echo "Start QoS"

tc qdisc del dev eth0 root
tc qdisc del dev eth1 root
# Remove qualquer qdisc associado a interface eth1.

tc qdisc add dev eth0 root handle 2: htb default 50
tc qdisc add dev eth1 root handle 1: htb default 50
# Associa uma regra de enfileiramento (qdisc) HTB a interface eth1 e vincula a
# esta o manipulador "1:". Este manipulador será referenciado por comandos
# abaixo para ajudar a criar a estrutura hierárquica. O "default 50" diz que
# todo tráfego que não estiver associado a uma classe específica será feito
# pela classe 50.

tc class add dev eth0 root classid 2:0 htb rate 1024kbit 
tc class add dev eth1 root classid 1:0 htb rate 2048kbit 
# Cria uma classe htb raiz identificando-a como "1:0" com a taxa de 512kbit/s.

tc class add dev eth1 parent 1:0 classid 1:10 htb rate 2048kbit 
tc class add dev eth1 parent 1:0 classid 1:20 htb rate 256kbit ceil 512kbit
tc class add dev eth1 parent 1:0 classid 1:30 htb rate 256kbit ceil 512kbit
#tc class add dev eth1 parent 1:0 classid 1:40 htb rate 128kbit ceil 256kbit
tc class add dev eth1 parent 1:0 classid 1:40 htb rate 64kbit ceil 128kbit
tc class add dev eth1 parent 1:0 classid 1:50 htb rate 512kbit ceil 1024kbit

tc class add dev eth0 parent 2:0 classid 2:22 htb rate 512kbit ceil 1mbit
tc class add dev eth0 parent 2:0 classid 2:23 htb rate 512kbit ceil 1mbit
tc class add dev eth0 parent 2:0 classid 2:24 htb rate 256kbit ceil 512kbit
tc class add dev eth0 parent 2:0 classid 2:25 htb rate 128kbit ceil 256kbit

#tc class add dev eth1 parent 1:0 classid 1:60 htb rate 16kbit

# Cria cinco classes filhas da classe raiz "1:0" identificando-as como "1:10",
# "1:20", "1:30", "1:40" e "1:50" e atribui a elas as taxas de 272kbit/s,
# 128kbit/s, 64kbit/s, 32kbit/s e 16kbit/s respectivamente. Instrui ao HTB que
# o tráfego de qualquer uma das classes poderá chegar ao limite de 512kbit/s
# (ceil). Se ceil não for especificado ele será igual a taxa (rate).

tc qdisc add dev eth1 parent 1:10 handle 10: sfq perturb 10
tc qdisc add dev eth1 parent 1:20 handle 20: sfq perturb 10
tc qdisc add dev eth1 parent 1:30 handle 30: sfq perturb 10
tc qdisc add dev eth1 parent 1:40 handle 40: sfq perturb 10
tc qdisc add dev eth1 parent 1:50 handle 50: sfq perturb 10

tc qdisc add dev eth0 parent 2:22 handle 22: sfq perturb 10
tc qdisc add dev eth0 parent 2:23 handle 23: sfq perturb 10
tc qdisc add dev eth0 parent 2:24 handle 24: sfq perturb 10
tc qdisc add dev eth0 parent 2:25 handle 25: sfq perturb 10

#tc qdisc add dev eth1 parent 1:60 handle 60: sfq perturb 10

# Cria manipuladores sfq "10:" a "50:" sob as classes "1:10" a "1:50". O qdisc
# sfq objetiva fornecer uma distribuição justa entre os diversos tráfegos de
# uma mesma classe, fazendo com que as várias conexões sob uma mesma classe
# dividam de forma equilibrada entre si. O uso deste qdisc evita que uma
# conexão de uma classe "roube" os recursos das demais na mesma classe. O
# parâmetro "perturb 10" é o tempo em segundos onde será verificado a
# solicitação de uso de banda por conexão.

###Inicio filtro

tc filter add dev eth1 parent 1:0 protocol ip prio 1 u32 match ip tos 0x10 0xff flowid 1:10
tc filter add dev eth1 parent 1:0 protocol ip prio 1 u32 match ip tos 0x08 0xff flowid 1:10
tc filter add dev eth1 parent 1:0 protocol ip prio 1 u32 match ip dport 22 0xff flowid 1:10
tc filter add dev eth1 parent 1:0 protocol ip prio 1 u32 match ip dport 22100 0xff flowid 1:10
tc filter add dev eth1 parent 1:0 protocol ip prio 1 u32 match ip dport 5060 0xff flowid 1:10

tc filter add dev eth1 parent 1:0 protocol ip prio 3 u32 match ip dport 8080 0xfff flowid 1:40
tc filter add dev eth1 parent 1:0 protocol ip prio 3 u32 match ip dport 25 0xfff flowid 1:40
tc filter add dev eth1 parent 1:0 protocol ip prio 3 u32 match ip dport 587 0xfff flowid 1:40
tc filter add dev eth1 parent 1:0 protocol ip prio 3 u32 match ip dport 1863 0xfff flowid 1:40
tc filter add dev eth1 parent 1:0 protocol ip prio 3 u32 match ip dport 53 0xfff flowid 1:20
tc filter add dev eth1 parent 1:0 protocol ip prio 3 u32 match ip dport 110 0xfff flowid 1:20
tc filter add dev eth1 parent 1:0 protocol ip prio 3 u32 match ip dport 993 0xfff flowid 1:40
tc filter add dev eth1 parent 1:0 protocol ip prio 3 u32 match ip dport 995 0xfff flowid 1:20
tc filter add dev eth1 parent 1:0 protocol ip prio 2 u32 match ip dport 80 0xfff flowid 1:20
tc filter add dev eth1 parent 1:0 protocol ip prio 2 u32 match ip dport 5432 0xfff flowid 1:20
tc filter add dev eth1 parent 1:0 protocol ip prio 2 u32 match ip dport 443 0xfff flowid 1:30
#tc filter add dev eth1 parent 1:0 protocol ip prio 2 u32 match ip dport 143 0xfff flowid 1:40
tc filter add dev eth0 parent 2:0 protocol ip prio 100 u32 match ip dport 143 0xfff flowid 2:25
tc filter add dev eth1 parent 1:0 protocol ip prio 4 u32 match ip dport 20 0xfff flowid 1:30
tc filter add dev eth1 parent 1:0 protocol ip prio 4 u32 match ip dport 21 0xfff flowid 1:30
tc filter add dev eth1 parent 1:0 protocol ip prio 4 u32 match ip dport 135 0xfff flowid 1:30
tc filter add dev eth1 parent 1:0 protocol ip prio 4 u32 match ip dport 137 0xfff flowid 1:30
tc filter add dev eth1 parent 1:0 protocol ip prio 4 u32 match ip dport 139 0xfff flowid 1:30
tc filter add dev eth1 parent 1:0 protocol ip prio 4 u32 match ip dport 445 0xfff flowid 1:30
tc filter add dev eth1 parent 1:0 protocol ip prio 4 u32 match ip dport 901 0xfff flowid 1:30

tc filter add dev eth0 parent 2:0 protocol ip prio 100 u32 match ip dst 10.11.12.5/32 classid 2:22
#tc filter add dev eth0 parent 2:0 protocol ip prio 100 u32 match ip dst 10.11.12.38/32 classid 2:23
#tc filter add dev eth0 parent 2:0 protocol ip prio 100 u32 match ip dst 10.11.12.167/32 classid 2:23
#tc filter add dev eth0 parent 2:0 protocol ip prio 100 u32 match ip dst 10.11.12.151/32 classid 2:23
tc filter add dev eth0 parent 2:0 protocol ip prio 100 u32 match ip dst 10.11.12.125/32 classid 2:23
#tc filter add dev eth0 parent 2:0 protocol ip prio 100 u32 match ip dst 10.11.12.138/32 classid 2:24

tc filter add dev eth0 parent 2:0 protocol ip prio 100 u32 match ip src 200.225.83.18/32 classid 2:24

###fim

}

fw_stop ()
{
echo "Stop QoS"
tc qdisc del dev eth1 root	
}

case "$1" in
'start')
	fw_start
	;;
'stop')
	fw_stop
	;;
*)
	;;
esac

